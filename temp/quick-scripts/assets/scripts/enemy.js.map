{"version":3,"sources":["enemy.js"],"names":["EnemyState","Invalid","Running","EndPath","Dead","cc","Class","extends","Component","properties","spriteFrames","default","type","SpriteFrame","lifeProgressBar","ProgressBar","onLoad","state","node","opacity","currentPathCount","currentHealth","totalHealth","initWithData","positionArray","getComponent","Sprite","spriteFrame","partPointer","position","loader","loadRes","err","result","log","config","speed","health","setState","update","dt","distance","pDistance","length","direction","pNormalize","pSub","pAdd","pMult","progress","action","fadeOut","sequence","callFunc","console","runAction","isLiving","isDead","beAttacked","damage"],"mappings":"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","file":"enemy.js","sourceRoot":"../../../../assets/scripts","sourcesContent":["const EnemyState = {\n    Invalid : -1,\n    Running : 1,\n    EndPath : 2,\n    Dead : 3\n};\n\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        spriteFrames: {\n            default :[],\n            type: cc.SpriteFrame\n        },\n\n        lifeProgressBar : {\n            default: null,\n            type : cc.ProgressBar\n        }\n    },\n\n    onLoad : function (){\n        this.state  = EnemyState.Invalid;\n        this.node.opacity = 0;\n        this.currentPathCount = 0;\n        this.currentHealth = 0;\n        this.totalHealth = 1;\n\n    },\n\n    initWithData : function (type , positionArray){\n        this.node.getComponent(cc.Sprite).spriteFrame = this.spriteFrames[type];\n        this.partPointer = positionArray;\n\n        this.node.position = this.partPointer[0];\n\n        cc.loader.loadRes(\"./enemy_config\", (err,result) =>{\n            if(err){\n                cc.log(\"err == \"+ err);\n            }else{\n                // cc.log(\"result == \" + JSON.stringify(result));\n                let config = result[\"enemy_\" + type];\n                this.speed = config.speed;\n                this.currentHealth = config.health;\n                this.totalHealth = config.health;\n                this.setState(EnemyState.Running);\n            }\n        });\n    },\n\n    update: function (dt){\n        if (this.state == EnemyState.Running) {\n            let distance = cc.pDistance(this.node.position,this.partPointer[this.currentPathCount]);\n            if (distance < 10) {\n                this.currentPathCount ++;\n\n                if (this.currentPathCount >= this.partPointer.length) {\n                    this.setState(EnemyState.EndPath);\n                    return;\n                };\n\n                this.direction = cc.pNormalize(cc.pSub(this.partPointer[this.currentPathCount], this.node.position));\n            }\n            else\n            {\n                this.node.position = cc.pAdd(this.node.position,cc.pMult(this.direction,this.speed *dt));\n            }\n        };\n\n        this.lifeProgressBar.progress = (this.totalHealth - this.currentHealth) / this.totalHealth;\n    },\n\n    setState: function(state){\n        if (this.state == state) {\n            return;\n        };\n\n        switch(state){\n            case EnemyState.Running:\n            this.node.opacity = 255;\n                break;\n            case EnemyState.Dead:\n                let action = cc.fadeOut(1);\n\n                let sequence = cc.sequence(action, cc.callFunc(function(){\n                    console.log(\"call func actin!!!\");\n                    // this.node.destroy();\n                },this));\n                this.node.runAction(sequence);\n\n                break;\n            case EnemyState.EndPath:\n                break;\n            default:\n                break;\n        }\n        this.state = state;\n    },\n\n    isLiving: function(){\n        if(this.state == EnemyState.Running){\n            return true;\n        };\n        return false;\n    },\n\n    isDead: function(){\n        if (this.state == EnemyState.Dead) {\n            return true;\n        };\n        return false;\n    },\n\n    beAttacked: function (damage){\n        this.currentHealth -= damage;\n        if (this.currentHealth < 0) {\n            this.currentHealth = 0;\n            this.setState(EnemyState.Dead);\n             // this.node.destroy();\n        };\n    }\n\n});\n\n\n\n\n\n\n\n"]}