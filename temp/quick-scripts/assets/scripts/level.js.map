{"version":3,"sources":["level.js"],"names":["TowerNodeState","Invalid","Null","BuildMenu","Tower","UpdateMenu","cc","Class","extends","Component","properties","enemyPathNodes","default","type","Node","towerPosNodes","buildTowerPrefab","Prefab","towerPrefab","updateTowerPrefab","onLoad","i","length","node","setState","setTouchEvent","global","event","on","buildTower","bind","updateTower","sellTower","EventType","TOUCH_START","log","target","name","state","showBuildMenu","showUpdateMenu","closeMenu","menu","instantiate","parent","position","destroy","data","tower","onDestory","off","getComponent"],"mappings":"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","file":"level.js","sourceRoot":"../../../../assets/scripts","sourcesContent":["import global from '../global'\n\nconst TowerNodeState = {\n    Invalid : -1,\n    Null : 1,\n    BuildMenu : 2,\n    Tower : 3,\n    UpdateMenu : 4\n};\n\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        \n        enemyPathNodes: {\n            default : [],\n            type : cc.Node\n        },\n\n        towerPosNodes: {\n            default : [],\n            type : cc.Node\n        },\n\n        buildTowerPrefab: {\n            default: null,\n            type : cc.Prefab\n        },\n\n        towerPrefab: {\n            default: [],\n            type : cc.Prefab\n        },\n\n        updateTowerPrefab: {\n            default: null,\n            type : cc.Prefab\n        }\n\n    },\n\n    onLoad: function() {\n        for(let i=0; i < this.towerPosNodes.length; i++){\n            let node = this.towerPosNodes[i];\n            this.setState(node,TowerNodeState.Null);\n            this.setTouchEvent(node);\n        }\n\n        global.event.on(\"build_tower\",this.buildTower.bind(this));\n        global.event.on(\"update_tower\",this.updateTower.bind(this));\n        global.event.on(\"sell_tower\",this.sellTower.bind(this));\n    },\n\n    setTouchEvent: function(node){\n\n        node.on(cc.Node.EventType.TOUCH_START, function (event) {\n            cc.log(\"touch node name == \" + event.target.name);\n\n            if(node.state == TowerNodeState.Null){\n                this.showBuildMenu(event.target);\n            }\n            else if(node.state == TowerNodeState.Tower){\n                this.showUpdateMenu(event.target);\n            }\n            \n        }, this);\n    },\n\n    showBuildMenu: function (node){\n\n        this.closeMenu();\n\n        if (node.state == TowerNodeState.Null) {\n            let menu = cc.instantiate(this.buildTowerPrefab);\n            menu.parent = this.node;\n            menu.position = node.position;\n            this.setState(node, TowerNodeState.BuildMenu);\n            node.menu = menu;\n        };\n    },\n\n    showUpdateMenu: function(node){\n        this.closeMenu();\n        let menu = cc.instantiate(this.updateTowerPrefab);\n        menu.parent = this.node;\n        menu.position = node.position;\n        this.setState(node, TowerNodeState.UpdateMenu);\n        node.menu = menu;\n\n    },\n\n    closeMenu: function (){\n        for (let i = 0; i < this.towerPosNodes.length ; i++){\n            let node = this.towerPosNodes[i];\n            if (node.state == TowerNodeState.BuildMenu) {\n                node.menu.destroy();\n                this.setState(node,TowerNodeState.Null);\n                return node;\n            }\n            else if (node.state == TowerNodeState.UpdateMenu) {\n                node.menu.destroy();\n                this.setState(node,TowerNodeState.Tower);\n                return node;\n            };\n        }\n    },\n\n    setState: function (node, state){\n        if(node.state == state){\n            return;\n        }\n\n        switch (state){\n            case TowerNodeState.Null:\n                break;\n            case TowerNodeState.BuildMenu:\n                break;\n            default:\n                break;\n        }\n        node.state = state;\n    },\n\n    buildTower: function(data){\n        cc.log(\"build tower \" + data);\n        let node = this.closeMenu();\n        let tower = cc.instantiate(this.towerPrefab[data]);\n        tower.parent = this.node;\n        tower.position = node.position;\n        this.setState(node,TowerNodeState.Tower);\n        node.tower = tower;\n    },\n\n    onDestory: function(){\n        global.event.off(\"build_tower\", this.buildTower);\n    },\n\n    updateTower: function(){\n        let node = this.closeMenu();\n        node.tower.getComponent(\"tower\").updateTower();\n    },\n\n    sellTower: function(){\n        let node = this.closeMenu();\n        node.tower.getComponent(\"tower\").sellTower();\n    }\n\n    // update (dt) {},\n});\n\n\n\n\n\n\n\n"]}