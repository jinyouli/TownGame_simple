{"version":3,"sources":["../../../../assets/scripts/assets/scripts/enemy.js"],"names":["EnemyState","Invalid","Running","EndPath","Dead","cc","Class","extends","Component","properties","spriteFrames","default","type","SpriteFrame","onLoad","state","node","opacity","currentPathCount","initWithData","partPointer","getComponent","Sprite","spriteFrame","position","loader","loadRes","err","result","log","config","speed","health","setState","update","dt","distance","pDistance","length","direction","pNormalize","pSub","pAdd","pMult","isLiving"],"mappings":"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","file":"enemy.js","sourceRoot":"../../../../assets/scripts","sourcesContent":["const EnemyState = {\n    Invalid : -1,\n    Running : 1,\n    EndPath : 2,\n    Dead : 3\n};\n\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        spriteFrames: {\n            default :[],\n            type: cc.SpriteFrame\n        }\n    },\n\n    onLoad : function (){\n        this.state  = EnemyState.Invalid;\n        this.node.opacity = 0;\n        this.currentPathCount = 0;\n\n    },\n\n    initWithData : function (type , partPointer){\n        this.node.getComponent(cc.Sprite).spriteFrame = this.spriteFrames[type];\n        this.partPointer = partPointer;\n\n        this.node.position = this.partPointer[0].position;\n\n        cc.loader.loadRes(\"./enemy_config\", (err,result) =>{\n            if(err){\n                cc.log(\"err == \"+ err);\n            }else{\n                // cc.log(\"result == \" + JSON.stringify(result));\n                let config = result[\"enemy_\" + type];\n                this.speed = config.speed;\n                this.health = config.health;\n                this.setState(EnemyState.Running);\n            }\n        });\n    },\n\n    update: function (dt){\n        if (this.state == EnemyState.Running) {\n            let distance = cc.pDistance(this.node.position,this.partPointer[this.currentPathCount].position);\n            if (distance < 10) {\n                this.currentPathCount ++;\n\n                if (this.currentPathCount >= this.partPointer.length) {\n                    this.setState(EnemyState.EndPath);\n                    return;\n                };\n\n                this.direction = cc.pNormalize(cc.pSub(this.partPointer[this.currentPathCount].position, this.node.position));\n            }\n            else\n            {\n                this.node.position = cc.pAdd(this.node.position,cc.pMult(this.direction,this.speed *dt));\n            }\n        };\n    },\n\n    setState: function(state){\n        if (this.state == state) {\n            return;\n        };\n\n        switch(state){\n            case EnemyState.Running:\n            this.node.opacity = 255;\n                break;\n            case EnemyState.Dead:\n                break;\n            case EnemyState.EndPath:\n                break;\n            default:\n                break;\n        }\n        this.state = state;\n    },\n\n    isLiving: function(){\n        if(this.state == EnemyState.Running){\n            return true;\n        }\n        return false;\n    }\n\n});\n\n\n\n\n\n\n\n"]}