{"version":3,"sources":["../../../../assets/scripts/assets/scripts/tower.js"],"names":["cc","Class","extends","Component","properties","spriteFrames","default","type","SpriteFrame","towerType","onLoad","levelCount","currentDamage","lookRange","currentAttackRange","shootBulletDt","currentBulletDt","loader","loadRes","err","result","log","JSON","stringify","towerConfig","damage","actack_range","look_range","shoot_dt","updateTower","length","node","getComponent","Sprite","spriteFrame","sellTower","destroy","isAttack","enemy","undefined","setEnemy","distance","pDistance","position","update","dt","direction","pSub","angle","pAngleSigned","p","rotation","Math","PI","shootBullet","global","event","fire"],"mappings":"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","file":"tower.js","sourceRoot":"../../../../assets/scripts","sourcesContent":["import global from \"./global\"\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        spriteFrames : {\n            default : [],\n            type: cc.SpriteFrame\n        },\n\n        towerType : \"\"\n    },\n\n    onLoad: function(){\n        this.levelCount = 0;\n        this.currentDamage = 0;\n        this.lookRange = 0;\n        this.currentAttackRange = 0;\n        this.shootBulletDt = 0;\n        this.currentBulletDt = 0;\n\n        cc.loader.loadRes(\"./tower_config\",(err, result)=>{\n            if (err) {\n                cc.log(\"err = \" + err);\n            }else {\n                cc.log(\"success = \" + JSON.stringify(result));\n                this.towerConfig = result[this.towerType];\n                this.currentDamage = this.towerConfig.damage[this.levelCount];\n                this.currentAttackRange = this.towerConfig.actack_range[this.levelCount];\n                this.lookRange = this.towerConfig.look_range;\n                this.shootBulletDt = this.towerConfig.shoot_dt[this.levelCount];\n            }\n        });\n    },\n\n    updateTower: function (){\n        if (this.levelCount < this.spriteFrames.length - 1) {\n            this.levelCount ++;\n            this.node.getComponent(cc.Sprite).spriteFrame = this.spriteFrames[this.levelCount];\n\n            this.currentDamage = this.towerConfig.damage[this.levelCount];\n            this.currentAttackRange = this.towerConfig.actack_range[this.levelCount];\n            this.lookRange = this.towerConfig.look_range;\n        }\n        else {\n            cc.log(\"满级\");\n        }\n    },\n\n    sellTower: function (){\n        this.node.destroy();\n    },\n\n    isAttack: function (){\n        if (this.enemy == undefined) {\n            return true;\n        };\n\n        return false;\n    },\n\n    setEnemy: function (enemy){\n\n        let distance = cc.pDistance(enemy.position,this.node.position);\n\n        if (distance < 400) {\n            this.enemy = enemy;\n        };  \n    },\n\n    update : function(dt){\n        if(this.enemy != undefined){\n            let direction = cc.pSub(this.enemy.position, this.node.position);\n\n            let angle = cc.pAngleSigned(direction, cc.p(0,1));\n            this.node.rotation = (180 / Math.PI) * angle;\n\n            if (this.currentBulletDt > this.shootBulletDt ) {\n                this.currentBulletDt = 0;\n                this.shootBullet();\n            }else{\n                this.currentBulletDt += dt;\n            }\n\n            let distance = cc.pDistance(this.enemy.position, this.node.position);\n            if (distance > this.currentAttackRange) {\n                this.enemy = undefined;\n            };\n        }\n    },\n\n    shootBullet: function(){\n        global.event.fire(\"addBullet\",this.node, this.enemy.position);\n    }\n\n});\n\n\n\n\n\n\n\n\n\n"]}