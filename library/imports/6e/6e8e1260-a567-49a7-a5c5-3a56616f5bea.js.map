{"version":3,"sources":["../../../../assets/scripts/assets/scripts/map_gen.js"],"names":["cc","Class","extends","Component","properties","is_debug","onLoad","anim_com","node","getComponent","Animation","clips","getClips","clip","graphics","addComponent","Graphics","fillColor","color","paths","curveData","road_data_set","k","road_data","props","position","gen_path_data","draw_roads","start","get_road_set","ctrl1","start_point","end_point","ctrl2","road_curve_path","i","length","key_frame","push","v2","value","j","motionPath","console","log","one_road","index","len","bezier_length","OFFSET","count","Math","floor","t_delta","t","x","y","path","clear","moveTo","lineTo","close","fill","prev_point","now_point","dir","sub","mag"],"mappings":"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","file":"map_gen.js","sourceRoot":"../../../../assets/scripts","sourcesContent":["\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //    default: null,      // The default value will be used only when the component attaching\r\n        //                           to a node for the first time\r\n        //    url: cc.Texture2D,  // optional, default is typeof default\r\n        //    serializable: true, // optional, default is true\r\n        //    visible: true,      // optional, default is true\r\n        //    displayName: 'Foo', // optional\r\n        //    readonly: false,    // optional, default is false\r\n        // },\r\n        // ...\r\n        is_debug: false,\r\n    },\r\n\r\n    // use this for initialization\r\n    onLoad: function () {\r\n        this.anim_com = this.node.getComponent(cc.Animation);\r\n        var clips = this.anim_com.getClips();\r\n        var clip = clips[0];\r\n        \r\n        this.graphics = this.node.addComponent(cc.Graphics);\r\n        this.graphics.fillColor = cc.color(255, 0, 0, 255);\r\n        var paths = clip.curveData.paths;\r\n        // console.log(paths);\r\n        \r\n        this.road_data_set = [];\r\n        \r\n        var k;\r\n        for (k in paths) {\r\n            var road_data = paths[k].props.position;\r\n            this.gen_path_data(road_data);\r\n        }\r\n\r\n        if (this.is_debug) {\r\n            this.draw_roads();\r\n        }\r\n    },\r\n    \r\n    start: function() {\r\n        /*\r\n        // test()\r\n        var actor = cc.find(\"UI_ROOT/map_root/ememy_gorilla\").getComponent(\"actor\");\r\n        // actor.gen_at_road(this.road_data_set[0]);\r\n        \r\n        actor = cc.find(\"UI_ROOT/map_root/ememy_small2\").getComponent(\"actor\");\r\n        // actor.gen_at_road(this.road_data_set[1]);\r\n        \r\n        actor = cc.find(\"UI_ROOT/map_root/ememy_small3\").getComponent(\"actor\");\r\n        actor.gen_at_road(this.road_data_set[2]);\r\n        */\r\n        // end \r\n    },\r\n    \r\n    // [[road1], [road2], [road3], [road4]...] --> [p1, p2, p3, p4, 红色点]\r\n    get_road_set: function() {\r\n        return this.road_data_set;\r\n    },\r\n    \r\n    gen_path_data: function(road_data) {\r\n        var ctrl1 = null;\r\n        var start_point = null;\r\n        var end_point = null;\r\n        var ctrl2 = null;\r\n        \r\n        var road_curve_path = []; // [start_point, ctrl1, ctrl2, end_point],\r\n        for(var i = 0; i < road_data.length; i ++) {\r\n            var key_frame = road_data[i];\r\n            if (ctrl1 !== null) {\r\n                road_curve_path.push([start_point, ctrl1, ctrl1, cc.v2(key_frame.value[0], key_frame.value[1])]);\r\n            }\r\n            \r\n            start_point = cc.v2(key_frame.value[0], key_frame.value[1]);\r\n            \r\n            for(var j = 0; j < key_frame.motionPath.length; j ++) {\r\n                var end_point = cc.v2(key_frame.motionPath[j][0], key_frame.motionPath[j][1]);\r\n                ctrl2 = cc.v2(key_frame.motionPath[j][2], key_frame.motionPath[j][3]);\r\n                if (ctrl1 === null) {\r\n                    ctrl1 = ctrl2;\r\n                }\r\n                // 贝塞尔曲线 start_point, ctrl1, ctrl2, end_point,\r\n                road_curve_path.push([start_point, ctrl1, ctrl2, end_point]);\r\n                ctrl1 = cc.v2(key_frame.motionPath[j][4], key_frame.motionPath[j][5]);\r\n                start_point = end_point;\r\n            }\r\n        }\r\n        \r\n        console.log(road_curve_path);\r\n        \r\n        var one_road = [road_curve_path[0][0]];\r\n        \r\n        for(var index = 0; index < road_curve_path.length; index ++) {\r\n            start_point = road_curve_path[index][0];\r\n            ctrl1 = road_curve_path[index][1];\r\n            ctrl2 = road_curve_path[index][2];\r\n            end_point = road_curve_path[index][3];\r\n            \r\n            var len = this.bezier_length(start_point, ctrl1, ctrl2, end_point);\r\n            var OFFSET = 16;\r\n            var count = len / OFFSET;\r\n            count = Math.floor(count);\r\n            var t_delta = 1 / count;\r\n            var t = t_delta;\r\n            \r\n            for(var i = 0; i < count; i ++) {\r\n                var x = start_point.x * (1 - t) * (1 - t) * (1 - t) + 3 * ctrl1.x * t * (1 - t) * (1 - t) + 3 * ctrl2.x * t * t * (1 - t) + end_point.x * t * t * t;\r\n                var y = start_point.y * (1 - t) * (1 - t) * (1 - t) + 3 * ctrl1.y * t * (1 - t) * (1 - t) + 3 * ctrl2.y * t * t * (1 - t) + end_point.y * t * t * t;\r\n                one_road.push(cc.v2(x, y));\r\n                t += t_delta;\r\n            }\r\n        }\r\n        \r\n        console.log(one_road);\r\n        this.road_data_set.push(one_road);\r\n    }, \r\n\r\n    draw_roads(path) {\r\n        this.graphics.clear();\r\n\r\n        for(var j = 0; j < this.road_data_set.length; j ++) {\r\n            var path = this.road_data_set[j];\r\n\r\n            for(var i = 0; i < path.length; i ++) {\r\n                this.graphics.moveTo(path[i].x - 1, path[i].y + 1);\r\n                this.graphics.lineTo(path[i].x - 1, path[i].y - 1);\r\n                this.graphics.lineTo(path[i].x + 1, path[i].y - 1);\r\n                this.graphics.lineTo(path[i].x + 1, path[i].y + 1);\r\n                this.graphics.close(); // 组成一个封闭的路径\r\n            }\r\n        }\r\n        \r\n        // 画先，填充;\r\n        // this.graphics.stroke();\r\n        this.graphics.fill();\r\n    }, \r\n\r\n    bezier_length: function(start_point, ctrl1, ctrl2, end_point) {\r\n        // t [0, 1] t 分成20等分 1 / 20 = 0.05\r\n        var prev_point = start_point;\r\n        var length = 0;\r\n        var t = 0.05;\r\n        for(var i = 0; i < 20; i ++) {\r\n            var x = start_point.x * (1 - t) * (1 - t) * (1 - t) + 3 * ctrl1.x * t * (1 - t) * (1 - t) + 3 * ctrl2.x * t * t * (1 - t) + end_point.x * t * t * t;\r\n            var y = start_point.y * (1 - t) * (1 - t) * (1 - t) + 3 * ctrl1.y * t * (1 - t) * (1 - t) + 3 * ctrl2.y * t * t * (1 - t) + end_point.y * t * t * t;\r\n            var now_point = cc.v2(x, y);\r\n            // var dir = cc.pSub(now_point, prev_point);\r\n            var dir = now_point.sub(prev_point);\r\n            prev_point = now_point;\r\n            length += dir.mag();\r\n            \r\n            t += 0.05;\r\n        }\r\n        return length;\r\n    }\r\n    // called every frame, uncomment this function to activate update callback\r\n    // update: function (dt) {\r\n\r\n    // },\r\n});\r\n"]}